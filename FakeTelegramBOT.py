import secrets
import telebot
from telebot import types
import os
from random import choice
import sqlite3
import threading

lock = threading.Lock()

with open("Config\–¢–æ–∫–µ–Ω.txt") as f:
    token = f.readline()

bot = telebot.TeleBot(token)

with open("Config\–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤—ã.txt") as f:
    link = f.readline()

with open("Config\–Æ–∑–µ—Ä–Ω–µ–π–º —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏.txt") as f:
    link_support = f.readline()

with open("Config\–†–µ–∫–≤–∏–∑–∏—Ç—ã.txt") as f:
    pay = f.readline()


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üñ§ –ü—Ä–æ–±–Ω–∏–∫")
    btn3 = types.KeyboardButton("‚ù§Ô∏è –ü—Ä–∞–π—Å-–ª–∏—Å—Ç")
    btn2 = types.KeyboardButton("üíú –û—Ç–∑—ã–≤—ã")
    btn4 = types.KeyboardButton("üíº –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
    markup.add(btn1, btn3, btn2, btn4)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ß—Ç–æ –∂–µ–ª–∞–µ—à—å –∑–¥–µ—Å—å –Ω–∞–π—Ç–∏? üíã".format(message.from_user),
                     reply_markup=markup)


s = os.listdir('Source')


@bot.message_handler(content_types=['text'])
def func(message):
    global cursor
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–û—Ç–∑—ã–≤—ã", url=link)
    markup.add(button1)

    markup2 = types.InlineKeyboardMarkup()
    button2 = types.InlineKeyboardButton(text='–ü–æ–∫—É–ø–∫–∞', callback_data='first')
    markup2.add(button2)

    if message.text == "‚ù§Ô∏è –ü—Ä–∞–π—Å-–ª–∏—Å—Ç":
        bot.send_message(message.chat.id, text="–ü—Ä–∞–π—Å-–ª–∏—Å—Ç: \n\n1. –¢–µ–∫—Å—Ç\n2. –¢–µ–∫—Å—Ç\n3. –¢–µ–∫—Å—Ç\n–∏ —Ç.–¥",
                         reply_markup=markup2)

    if message.text == "üíú –û—Ç–∑—ã–≤—ã":
        bot.send_message(message.chat.id, text="‚¨áÔ∏è –¢—É—Ç –±—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤—Å–µ –æ—Ç–∑—ã–≤—ã ‚¨áÔ∏è", reply_markup=markup)

    if message.text == "üíº –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞":
        text = "–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:\n" + link_support
        bot.send_message(message.chat.id, text=text, disable_web_page_preview=True)

    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY)')
    conn.commit()

    if message.text == "üñ§ –ü—Ä–æ–±–Ω–∏–∫":

        user_id = message.chat.id

        with lock:
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM users WHERE id=?", (user_id,))
            result = cursor.fetchone()

            if result:
                bot.send_message(message.chat.id, text="–¢—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª —Å–≤–æ–π –ø—Ä–æ–±–Ω–∏–∫. ü•∫")
            else:
                send = bot.send_message(message.chat.id, text="–¢–≤–æ–π –ø—Ä–æ–±–Ω–∏–∫:")
                for i in range(len(s)):
                    source = open('Source/' + s[i], 'rb')
                    bot.send_photo(message.chat.id, source)
                cursor.execute("INSERT INTO users (id) VALUES (?)", (user_id,))
                conn.commit()

            conn.close()


@bot.callback_query_handler(func=lambda call: True)
def step2(call):
    menu2 = telebot.types.InlineKeyboardMarkup()
    menu2.add(telebot.types.InlineKeyboardButton(text='–¢–µ–∫—Å—Ç 1', callback_data='3f'))
    menu2.add(telebot.types.InlineKeyboardButton(text='–¢–µ–∫—Å—Ç 2', callback_data='4f'))
    menu2.add(telebot.types.InlineKeyboardButton(text='–¢–µ–∫—Å—Ç 3', callback_data='5f'))
    menu2.add(telebot.types.InlineKeyboardButton(text='–¢–µ–∫—Å—Ç 4', callback_data='6f'))
    menu2.add(telebot.types.InlineKeyboardButton(text='–¢–µ–∫—Å—Ç 5', callback_data='7f'))

    menu3 = telebot.types.InlineKeyboardMarkup()
    menu3.add(telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='8f'))

    if call.data == 'first':
        bot.send_message(call.message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?', reply_markup=menu2)

    list_generic = "A a B b C c D d E e F f G g H h I i J j K k L l M m N n O o P p Q q R r S s T t U u V v W w X x Y y Z z 1 2 3 4 5 6 7 8 9".split()

    generic_length = 20

    generic = ''
    for i in range(generic_length):
        generic += ''.join(secrets.choice(list_generic))

    if call.data == '3f':
        text = "–û–ø–ª–∞—Ç–∞: ü•ùQIWI-–∫–æ—à–µ–ª—ë–∫\n\nüí≥–°—É–º–º–∞: <—Å—É–º–º–∞>\nüí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + generic + "\nüìû–ù–æ–º–µ—Ä: " + pay + "\n\n‚õîÔ∏è –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–µ–π –∫ –ø–ª–∞—Ç–µ–∂—É. ‚õîÔ∏è"
        bot.send_message(call.message.chat.id, text=text, reply_markup=menu3)
    if call.data == '4f':
        text = "–û–ø–ª–∞—Ç–∞: ü•ùQIWI-–∫–æ—à–µ–ª—ë–∫\n\nüí≥–°—É–º–º–∞: <—Å—É–º–º–∞>\nüí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + generic + "\nüìû–ù–æ–º–µ—Ä:\n" + pay + "\n\n‚õîÔ∏è –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–µ–π –∫ –ø–ª–∞—Ç–µ–∂—É. ‚õîÔ∏è"
        bot.send_message(call.message.chat.id, text=text, reply_markup=menu3)
    if call.data == '5f':
        text = "–û–ø–ª–∞—Ç–∞: ü•ùQIWI-–∫–æ—à–µ–ª—ë–∫\n\nüí≥–°—É–º–º–∞: <—Å—É–º–º–∞>\nüí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + generic + "\nüìû–ù–æ–º–µ—Ä: " + pay + "\n\n‚õîÔ∏è –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–µ–π –∫ –ø–ª–∞—Ç–µ–∂—É. ‚õîÔ∏è"
        bot.send_message(call.message.chat.id, text=text, reply_markup=menu3)
    if call.data == '6f':
        text = "–û–ø–ª–∞—Ç–∞: ü•ùQIWI-–∫–æ—à–µ–ª—ë–∫\n\nüí≥–°—É–º–º–∞: <—Å—É–º–º–∞>\nüí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + generic + "\nüìû–ù–æ–º–µ—Ä: " + pay + "\n\n‚õîÔ∏è –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–µ–π –∫ –ø–ª–∞—Ç–µ–∂—É. ‚õîÔ∏è"
        bot.send_message(call.message.chat.id, text=text, reply_markup=menu3)
    if call.data == '7f':
        text = "–û–ø–ª–∞—Ç–∞: ü•ùQIWI-–∫–æ—à–µ–ª—ë–∫\n\nüí≥–°—É–º–º–∞: <—Å—É–º–º–∞>\nüí¨–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " + generic + "\nüìû–ù–æ–º–µ—Ä: " + pay + "\n\n‚õîÔ∏è –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–µ–π –∫ –ø–ª–∞—Ç–µ–∂—É. ‚õîÔ∏è"
        bot.send_message(call.message.chat.id, text=text, reply_markup=menu3)

    if call.data == '8f':
        text = "–ü–ª–∞—Ç—ë–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω."
        bot.send_message(call.message.chat.id, text=text)


threads = []
for i in range(10):
    t = threading.Thread(args=(i,))
    threads.append(t)
    t.start()

for t in threads:
    t.join()

bot.polling(none_stop=True)
